[function test_variables]

test_variables_local
test_variables_global

[function test_variables_local]
serv.smsg "test_variables_local\n"

arg(localVariable1,123)
ShouldBeSameString("local variable's numeric value","123",<arg(localVariable1)>)
arg(localVariable1,stringValue)
ShouldBeSameString("local variable's unquoted string value",stringValue,<arg(localVariable1)>)
arg(localVariable1,"quoted string value")
ShouldBeSameString("local variable's quoted string value","quoted string value",<arg(localVariable1)>)
arg(localVariable2     ,1)
ShouldBeSameString("ignores whitespace after local variable name in assignment",1,<arg(localVariable2)>)
arg(localVariable2,123)
ShouldBeSameString("ignores whitespace before and after local variable name",123,<arg(   localVariable2   )>)
arg(localVariable2,#+1)
ShouldBeSameString("evaluates sharp replacement expression for local variable",124,<arg(localVariable2)>)
arg(localVariable2,1+#)
ShouldBeSameString("no evaluation for local variable when sharp not on first index","1+#",<arg(localVariable2)>)
arg.localVariable2=321
ShouldBeSameString("chained local variable assignment and read",321,<arg.localVariable2>)
arg.localVariable2=#+1
ShouldBeSameString("chained local variable sharp replacement",322,<arg.localVariable2>)
arg.localVariable2=asdf
ShouldBeSameString("unspecified local variable read","asdf",<localVariable2>)
arg(localVariable[2],asdf)
ShouldBeSameString("indexed local variable with expression index",asdf,<arg(localVariable[1+1])>)
arg(localVariableIndex,3)
arg(localVariable[arg(localVariableIndex)],qwerrewq)
ShouldBeSameString("indexed local variable with variable index",qwerrewq,<arg(localVariable[3])>)
arg(localVariable_4,hjhjjh)
ShouldBeSameString("indexed local variable with underscore",hjhjjh,<arg(localVariable_4)>)

arg(index,2)
arg(indexOfIndex[2],1)
arg(localVariable[indexOfIndex[index]],zzz)
ShouldBeSameString("nested index",zzz,<arg(localVariable[arg(indexOfIndex[index])])>)
ShouldBeSameString("nested index - unspecified index read",zzz,<localVariable[indexOfIndex[index]]>)
ShouldBeSameString("nested index - constant index read",zzz,<localVariable[1]>)

arg(localVariable[2],xxx)
ShouldBeSameString("function call index",xxx,<localVariable[return_first_arg(2)]>)
ShouldBeSameString("function call index with two arguments",xxx,<localVariable[return_first_arg(2,123)]>)

arg(localVariableIndex,5)
arg(localVariable_5,ggghhh)
ShouldBeSameString("indexed local variable, write with underscore, read with variable index",ggghhh,<arg(localVariable[arg(localVariableIndex)])>)
arg(localVariable2,"asdf")
ShouldBeSameString("no doublequotes for doublequoted value",asdfasdfasdf,<arg(localVariable2)><arg(localVariable2)><arg(localVariable2)>)
arg.localVariable2="asdf"
ShouldBeSameString("no doublequotes for doublequoted value - chained assignment",asdfasdfasdf,<arg(localVariable2)><arg(localVariable2)><arg(localVariable2)>)
arg(localVariable2, asdf)
ShouldBeSameString("value prefixed with whitespace"," asdf",<arg(localVariable2)>)
arg(localVariable2,"asdf ")
ShouldBeSameString("doublequoted value with trailing whitespace","asdf ","<arg(localVariable2)>")
arg(localVariable2,"1+1")
ShouldBeSameString("doublequoted expression","1+1","<arg(localVariable2)>")
ShouldBeSameString("nonexisting variable value","","<arg(nonExistingLocalVariable)>")

arg(localVariable2,#010000)
ShouldBeSameString("local variable chained call",DrZhor,<arg(localVariable2).name>)
ShouldBeSameString("unspecific local variable chained call",DrZhor,<localVariable2.name>)

arg(localVariable[1],#010000)
ShouldBeSameString("indexed local variable chained call",DrZhor,<arg(localVariable[1]).name>)

var(function_was_called,0)
arg(localVar2,#010000)
arg(localVar2).f_was_function_call
ShouldBeSameString("chained local variable parameterless call",yes,<var(function_was_called)>)

var(function_was_called,0)
arg(localVar2,#010000)
localVar2.f_was_function_call
ShouldBeSameString("direct chained local variable parameterless call",yes,<var(function_was_called)>)

arg(localVar2).p=5400,2553
ShouldBeSameString("set chained local variable value containing commas on char","5400,2553","<arg(localVar2).p>")

var(localVar3,321)
arg(localVar3,123)
ShouldBeSameString("local variable has higher priority than global variable",123,<localVar3>)

finduid(010000).test_variables_local_on_chained_call

serv.smsg "\n"

[function test_variables_global]
serv.smsg "test_variables_global\n"

var(variable1,123)
ShouldBeSameString("global variable's numeric value","123",<var(variable1)>)
var(variable1,stringValue)
ShouldBeSameString("global variable's unquoted string value",stringValue,<var(variable1)>)
var(variable1,"quoted string value")
ShouldBeSameString("global variable's quoted string value","quoted string value",<var(variable1)>)
var(variable2     ,1)
ShouldBeSameString("ignores whitespace after global variable name in assignment",1,<var(variable2)>)
var(variable2,123)
ShouldBeSameString("ignores whitespace before and after global variable name",123,<var(   variable2   )>)
var(variable2,#+1)
ShouldBeSameString("evaluates sharp replacement expression for global variable",124,<var(variable2)>)
var(variable2,1+#)
ShouldBeSameString("no evaluation for global variable when sharp not on first index","1+#",<var(variable2)>)
var.variable2=321
ShouldBeSameString("chained global variable assignment and read",321,<var.variable2>)
var.variable2=#+1
ShouldBeSameString("chained global variable sharp replacement",322,<var.variable2>)
var.variable2=asdf
ShouldBeSameString("unspecified global variable sharp read",asdf,<variable2>)
var.variable[2]=asdf
ShouldBeSameString("indexed variable with expression index",asdf,<variable[1+1]>)

arg(variableIndex,3)
var(globalVariable[arg(variableIndex)],qwerrewq)
ShouldBeSameString("indexed local variable with variable index",qwerrewq,<var(globalVariable[3])>)
var(globalVariable_4,hjhjjh)
ShouldBeSameString("indexed local variable with underscore",hjhjjh,<var(globalVariable_4)>)
arg(variableIndex,5)
var(globalVariable_5,ggghhh)
ShouldBeSameString("indexed local variable, write with underscore, read with variable index",ggghhh,<var(globalVariable[arg(variableIndex)])>)

arg(index,2)
arg(indexOfIndex[2],1)
var(globalVariable[indexOfIndex[index]],zzz)
ShouldBeSameString("nested index",zzz,<var(globalVariable[arg(indexOfIndex[index])])>)
ShouldBeSameString("nested index - unspecified index read",zzz,<globalVariable[indexOfIndex[index]]>)
ShouldBeSameString("nested index - constant index read",zzz,<globalVariable[1]>)

arg(globalVariable[2],xxx)
ShouldBeSameString("function call index",xxx,<globalVariable[return_first_arg(2)]>)
ShouldBeSameString("function call index with two arguments",xxx,<globalVariable[return_first_arg(2,123)]>)

var(variable2,"asdf")
ShouldBeSameString("no doublequotes for doublequoted value",asdfasdfasdf,<var(variable2)><var(variable2)><var(variable2)>)
var.variable2="asdf"
ShouldBeSameString("no doublequotes for doublequoted value - chained assignment",asdfasdfasdf,<var(variable2)><var(variable2)><var(variable2)>)
var(variable2, asdf)
ShouldBeSameString("value prefixed with whitespace"," asdf",<var(variable2)>)
var(variable2,"1+1")
ShouldBeSameString("doublequoted expression","1+1","<var(variable2)>")
ShouldBeSameString("nonexisting variable value","","<var(nonExistingGlobalVariable)>")

// Error "Can't resolve <variable2>" on Sphere99
// var(variable2,"")
// ShouldBeSameString("empty string doesn't remove variable","","<variable2>")

var(variable2,#010000)
ShouldBeSameString("global variable chained call",DrZhor,<var(variable2).name>)
ShouldBeSameString("global variable unspecified chained call",DrZhor,<variable2.name>)

var(variable[2],#010000)
ShouldBeSameString("indexed global variable chained access",DrZhor,<var(variable[2]).name>)

var(function_was_called,0)
var(variable2,#010000)
var(variable2).f_was_function_call
ShouldBeSameString("chained global variable parameterless call",yes,<var(function_was_called)>)

var(function_was_called,0)
var(variable2,#010000)
variable2.f_was_function_call
ShouldBeSameString("direct chained global variable parameterless call",yes,<var(function_was_called)>)

var(variable2).p=5399,2552
ShouldBeSameString("set chained global variable value containing commas on","5399,2552","<var(variable2).p>")
variable2.p=5398,2551
ShouldBeSameString("set direct chained global variable value containing commas on","5398,2551","<variable2.p>")

// globalSavedVariable has to be stored in save file
ShouldBeSameString("saved global variable",123,<var(globalSavedVariable)>)

finduid(010000).test_variables_global_on_chained_call

// Doesn't work on Sphere99
// var(variable3,123)
// var.remove.variable3
// ShouldBeSameString("remove global variable",00,<eval strlen(<var(variable3)>)>)

// Doesn't work on Sphere99
// ShouldBeSameString("indexed global variable unspecified chained call",DrZhor,<variable[2].name>)

// Doesn't work on Sphere99
// var(variable2,"#010000")
// ShouldBeSameString("chained call",DrZhor,<var(variable2).name>)

serv.smsg "\n"

[function test_variables_local_on_chained_call]
tag(tagWithIndex,2)
arg(localVariable[tag(tagWithIndex)],value3)
ShouldBeSameString("index with unchained tag",value3,<arg(localVariable[tag(tagWithIndex)])>)
ShouldBeSameString("index with unchained tag - unspecified",value3,<localVariable[tag(tagWithIndex)]>)

[function test_variables_global_on_chained_call]
tag(tagWithIndex,2)
var(globalVariable[tag(tagWithIndex)],value3)
ShouldBeSameString("index with unchained tag",value3,<var(globalVariable[tag(tagWithIndex)])>)
ShouldBeSameString("index with unchained tag - unspecified",value3,<globalVariable[tag(tagWithIndex)]>)
