[function test_arguments_core]
ShouldBeSameString("chained call on args","DrZhor",<args.name>)
ShouldBeSameString("chained call on argv(0)","DrZhor",<argv(0).name>)

ShouldBeSameString("argv constant expression index","#010000",<argv(1-1)>)
arg(index,0)
ShouldBeSameString("argv variable index","#010000",<argv(arg(index))>)
ShouldBeSameString("argv variable expression index","#010000",<argv(arg(index)+1-1)>)

ShouldBeSameString("argv","#010000",<argv(0)>)
ShouldBeSameString("argv chained first argument","#010000",<argv.0>)

// Chained indexing points always to first argument on Sphere99
ShouldBeSameString("argv chained second argument","#010000",<argv.1>)

if 1
  ShouldBeSameString("args in then branch","#010000",<args>)
endif

if 0
else
  ShouldBeSameString("args in else branch","#010000",<args>)
endif

var(function_was_called,0)
argv(0).f_was_function_call
ShouldBeSameString("direct chained argument parameterless call",yes,<var(function_was_called)>)

var(function_was_called,0)
argv(0).f_was_function_call("asdf")
ShouldBeSameString("direct chained argument call",asdf,<var(function_was_called)>)

[function test_arguments_core_multiple]
if (strcmp("asdf",<argv(0)>))
  tst_fail("multiple arguments - argv(0)")
else
  tst_success("multiple arguments - argv(0)")
endif

if (strcmp("qwer",<argv(1)>))
  tst_fail("multiple arguments - argv(1)")
else
  tst_success("multiple arguments - argv(1)")
endif

if (strcmp(3,<argv(2)>))
  tst_fail("multiple arguments - argv(2)")
else
  tst_success("multiple arguments - argv(2)")
endif

if (strcmp(4,<argv(3)>))
  tst_fail("multiple arguments - argv(3)")
else
  tst_success("multiple arguments - argv(3)")
endif

if (strcmp(5,<argv(4)>))
  tst_fail("multiple arguments - argv(4)")
else
  tst_success("multiple arguments - argv(4)")
endif

if (strcmp(6,<argv(5)>))
  tst_fail("multiple arguments - argv(5)")
else
  tst_success("multiple arguments - argv(5)")
endif

if (strcmp("",<argv(6)>))
  tst_fail("multiple arguments - argv(6) - non-suplied argument")
else
  tst_success("multiple arguments - argv(6) - non-suplied argument")
endif

[function test_arguments]
serv.smsg "test_arguments\n"

test_arguments_core(#010000)
test_arguments_core_multiple("asdf","qwer",3,4,5,6)
test_arguments_chained
test_arguments_empty

serv.smsg "\n"

[function test_arguments_chained]
ShouldBeSameString("chained arguments",3,<finduid(010000).test_arguments_chained_add(1,2)>)
ShouldBeSameString("chained r_writeval on char",asdf,<finduid(010000).f_identity_args(asdf)>)

[function test_arguments_empty]
ShouldBeSameString("empty args - chained existing property","",<args.name>)
ShouldBeSameString("empty args - chained nonexisting property","",<args.blabla>)
ShouldBeSameString("empty argv(0) - chained","",<argv(0).name>)
ShouldBeSameString("empty argv(1) - chained","",<argv(1).name>)
ShouldBeSameString("empty argv(2) - chained","",<argv(2).name>)

[function test_arguments_chained_add]
return <eval <argv(0)>+<argv(1)>>

serv.smsg "\n"
